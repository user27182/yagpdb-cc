{{/*
This custom command prints a series of world clocks to a message.
The bot automatically updates the times in near real-time (typically <5 second delay).
To stop the clocks, simply delete the message which contains the clocks.

Created by: user27182
Last updated: 2021-Aug-19

To use this command effectively, there are two main steps:
(1) In Discord:
    a. Create a new channel called #world-clocks.
    b. Disable "Send Message" permissions in the new channel.

(2) In the YAGPDB.xyz control panel:
    a. Create a new custom command in the YAGPDB.xyz control panel.
    b. Choose "Command" as the trigger type (note: "Command" is the default type and should already be selected).
    c. Give the command a trigger of your choice (e.g. "clocks").
    d. Copy all code from this file into the new command.
    e. Modify the channel and role restrictions so that the code can only be executed in #world-clocks and by Administrator roles only.
    f. Save the command.
    g. In your discord server, go to #world-clocks and execute the command (e.g. -clocks).

NOTE:
It is recommended that you only run this command ONCE in your server so that only one set of clocks exists at any one time. If multiple clocks are created the command may be rate-limited by Discord and as a result all clocks may stop working altogether. Ideally, the command should be executed in a dedicated #world-clocks channel with Send Message permissions disabled as described above to ensure only one instance of the command is running.

*/}}

{{ deleteTrigger 0 }}

{{ $title := "**World 🕰️ Clocks!**" }}
{{ $titleAmericas := "\n\n🌎  __**Americas**__  🌎\n\n" }}
{{ $titleEurope := "\n\n🌍  __**Europe**__  🌍\n\n" }}
{{ $titleAsiaPacific := "\n\n🌏  __**Asia-Pacific**__  🌏\n\n" }}

{{ if (not .ExecData) }} {{/* initialize clock */}}
   
    {{ $content := " " }}
    {{ $color := 0xaa8900 }}
    {{ $tictoc:= "Initializing... Tic-Toc!" }}
    {{ $desc:= (joinStr "" $titleAmericas $tictoc $titleEurope $tictoc $titleAsiaPacific $tictoc) }}

    {{ $msgID := sendMessageRetID nil (complexMessage "content" $content "embed" (cembed "title" $title "description" $desc )) }} 

    {{/* start executing clock when next minute rolls over */}}
    {{ $delay := (sub 61 (currentTime.Format "05")) }}
    {{ execCC .CCID .Channel.ID $delay $msgID }}

{{ else }} {{/* else, if any execdata is passed, the clock will execute its update routine */}}

{{ $tFormat1 := "3:04PM" }}
{{ $tFormat2 := "15:04 UTC-0700 MST" }}
{{ $strFormat := "*%s*\n %s`%7s %s`\n" }}


{{ $city := "Vancouver" }}
{{ $tz := "America/Vancouver" }} {{/* Select timezone from http://kevalbhatt.github.io/timezone-picker */}}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tVancouver :=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "Chicago" }}
{{ $tz := "America/Chicago" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tChicago:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "New York" }}
{{ $tz := "America/New_York" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tNewYork:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "London" }}
{{ $tz := "Europe/London" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tLondon:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "Paris" }}
{{ $tz := "Europe/Paris" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tParis:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "Moscow" }}
{{ $tz := "Europe/Moscow" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tMoscow :=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "New Delhi" }}
{{ $tz := "Asia/Kolkata" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tNewDelhi:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "Bangkok" }}
{{ $tz := "Asia/Bangkok" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tBangkok :=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "Beijing" }}
{{ $tz := "Asia/Shanghai" }}{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tBeijing:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "Tokyo" }}
{{ $tz := "Asia/Tokyo" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tTokyo:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $city := "Sydney" }}
{{ $tz := "Australia/Sydney" }}
{{ $location := (newDate 0 0 0 0 0 0 $tz).Location }}
{{ $time := currentTime.In $location }}
{{ $tStr1 := ($time.Format $tFormat1) }}
{{ $tStr2 := ($time.Format $tFormat2) }}
{{ $h := ($time.Format "3") }} {{ $m := $time.Minute }} {{ if (gt $m 29) }} {{ $m = (str 30) }} {{ else }} {{ $m = "" }} {{ end }}
{{ $clock := (joinStr "" ":clock" $h $m ":") }}
{{ $tSydney:=  (printf $strFormat $city $clock $tStr1 $tStr2) }}


{{ $descAmericas := ( joinStr ""
$titleAmericas
$tVancouver 
$tChicago
$tNewYork
) }}

{{ $descEurope := ( joinStr ""
$titleEurope
$tLondon
$tParis
$tMoscow
) }}

{{ $descAsiaPacific := ( joinStr ""
$titleAsiaPacific
$tNewDelhi
$tBangkok
$tBeijing
$tTokyo
$tSydney
) }}

{{ $msgID := .ExecData }}
{{ $desc := (joinStr "" $descAmericas $descEurope $descAsiaPacific) }}
{{/* update clocks if the message still exists */}}
{{if getMessage nil $msgID }}
    {{ editMessage .Channel.ID $msgID (complexMessageEdit "embed" (cembed "title" $title "description" $desc "content" " " )) }}

    {{/* restart execution of this CC to update the clock */}}
    {{/* to avoid making too many CC calls, use a timer to limit CC calls to just before and just after the minute rolls over */}}
    {{ if (and (lt currentTime.Second 10) (gt currentTime.Second 0) ) }}
    {{ execCC .CCID .Channel.ID 55 $msgID }} {{ else }} {{ execCC .CCID .Channel.ID 2 $msgID }} {{ end }}
{{ else }}
    {{- "The :clock: clocks have been deleted. The ticking has stopped." -}}
{{ end }}

{{end}} {{/* end clock execution */}}
